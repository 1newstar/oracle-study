/*
分组函数
 */


-- 工资总额
SELECT sum(salary)
FROM HR.employees;

691416

-- 人员总数
SELECT count(*)
FROM employees;

107

-- 平均工资
SELECT
  sum(salary) / count(*) no1,
  avg(salary)            no2
FROM employees;

6461.831775700934579439252336448598130841	6461.831775700934579439252336448598130841


-- ?什么情况下sum/count和avg不一样
-- 平均奖金
SELECT
  sum(COMMISSION_PCT) / count(*)              no1,
  sum(COMMISSION_PCT) / count(COMMISSION_PCT) no2,
  avg(COMMISSION_PCT)
FROM employees;

0.072897196261682242990654205607476635514	0.2228571428571428571428571428571428571429	0.2228571428571428571428571428571428571429


-- null
-- null 的第四点，组函数会自动虑空

SELECT
  count(*),
  count(nvl(COMMISSION_PCT, 0))
FROM employees;

107	107


SELECT avg(nvl(COMMISSION_PCT, 0))
FROM employees;

0.072897196261682242990654205607476635514


/*
-- GROUP BY 语法

select a,b,c,avg(a)
from **
group by a,b,c;
 */

-- 求各个部门的平均工资
SELECT
  DEPARTMENT_ID,
  avg(SALARY)
FROM employees
GROUP BY DEPARTMENT_ID;

100	8601.333333333333333333333333333333333333
30	4150
7000
90	19333.3333333333333333333333333333333333
20	9500
70	10000
110	10154
50	3475.555555555555555555555555555555555556
80	8955.882352941176470588235294117647058824
40	6500
60	5760
10	4400


SELECT
  DEPARTMENT_ID,
  avg(SALARY)
FROM employees
GROUP BY DEPARTMENT_ID, JOB_ID;

110	8300
90	17000
50	2785
80	8396.551724137931034482758620689655172414
50	7280
80	12200
110	12008
90	24000
60	5760
100	12008
30	2780
50	3215
20	13000
100	7920
7000
70	10000
30	11000
10	4400
20	6000
40	6500




-- group by 多列
-- 先按照第一列分，如果第一列相同，再按照第二列，依次类推

SELECT
  DEPARTMENT_ID,
  JOB_ID,
  avg(SALARY)
FROM employees
GROUP BY DEPARTMENT_ID, JOB_ID
ORDER BY 1;

10	AD_ASST	4400
20	MK_MAN	13000
20	MK_REP	6000
30	PU_CLERK	2780
30	PU_MAN	11000
40	HR_REP	6500
50	SH_CLERK	3215
50	ST_CLERK	2785
50	ST_MAN	7280
60	IT_PROG	5760
70	PR_REP	10000
80	SA_MAN	12200
80	SA_REP	8396.551724137931034482758620689655172414
90	AD_PRES	24000
90	AD_VP	17000
100	FI_ACCOUNT	7920
100	FI_MGR	12008
110	AC_ACCOUNT	8300
110	AC_MGR	12008
SA_REP	7000



-- having
SELECT
  DEPARTMENT_ID,
  avg(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

100	8601.333333333333333333333333333333333333
30	4150
7000
90	19333.3333333333333333333333333333333333
20	9500
70	10000
110	10154
50	3475.555555555555555555555555555555555556
80	8955.882352941176470588235294117647058824
40	6500
60	5760
10	4400


-- 查询平均工资大于2000的部门


SELECT
  DEPARTMENT_ID,
  avg(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING avg(SALARY) > 2000;

100	8601.333333333333333333333333333333333333
30	4150
7000
90	19333.3333333333333333333333333333333333
20	9500
70	10000
110	10154
50	3475.555555555555555555555555555555555556
80	8955.882352941176470588235294117647058824
40	6500
60	5760
10	4400


-- having,过滤分组
-- 前提是要分组
-- having和where的区别
-- 求10号部门的平均工资


SELECT
  DEPARTMENT_ID,
  avg(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING DEPARTMENT_ID = 10;

10	4400


SELECT
  DEPARTMENT_ID,
  avg(SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 10
GROUP BY DEPARTMENT_ID;

10	4400


-- sql 优化，3，尽量使用where
-- 一种情况比较特殊，使用having
-- 如果条件中含有组函数，只能使用having



/*
group by 增强

rollup


group by deptno,job
group by deptno
group by null
=
group by rollup(deptno,job)
*/
SELECT
  DEPARTMENT_ID,
  JOB_ID,
  sum(SALARY)
FROM EMPLOYEES
GROUP BY rollup(DEPARTMENT_ID, JOB_ID);

SA_REP	7000
7000
10	AD_ASST	4400
10		4400
20	MK_MAN	13000
20	MK_REP	6000
20		19000
30	PU_MAN	11000
30	PU_CLERK	13900
30		24900
40	HR_REP	6500
40		6500
50	ST_MAN	36400
50	SH_CLERK	64300
50	ST_CLERK	55700
50		156400
60	IT_PROG	28800
60		28800
70	PR_REP	10000
70		10000
80	SA_MAN	61000
80	SA_REP	243500
80		304500
90	AD_VP	34000
90	AD_PRES	24000
90		58000
100	FI_MGR	12008
100	FI_ACCOUNT	39600
100		51608
110	AC_MGR	12008
110	AC_ACCOUNT	8300
110		20308
691416


/*
sql plus 支持报表功能

break on deptno skip 2

rollup
 */

SELECT
  DEPARTMENT_ID,
  JOB_ID,
  sum(SALARY)
FROM EMPLOYEES
GROUP BY rollup(DEPARTMENT_ID, JOB_ID);

SA_REP	7000
7000
10	AD_ASST	4400
10		4400
20	MK_MAN	13000
20	MK_REP	6000
20		19000
30	PU_MAN	11000
30	PU_CLERK	13900
30		24900
40	HR_REP	6500
40		6500
50	ST_MAN	36400
50	SH_CLERK	64300
50	ST_CLERK	55700
50		156400
60	IT_PROG	28800
60		28800
70	PR_REP	10000
70		10000
80	SA_MAN	61000
80	SA_REP	243500
80		304500
90	AD_VP	34000
90	AD_PRES	24000
90		58000
100	FI_MGR	12008
100	FI_ACCOUNT	39600
100		51608
110	AC_MGR	12008
110	AC_ACCOUNT	8300
110		20308
691416


SQL> break on null

SQL> /*
SQL> group by rollup(a,b)
SQL> =
SQL> group by a,b
SQL> +
SQL> group by a
SQL> +
SQL> group by null
SQL> */
SQL>
SQL>
SQL> 组函数会自动滤空
